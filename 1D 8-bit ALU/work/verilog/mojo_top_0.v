/*
   This file was generated automatically by the Mojo IDE version B1.3.4.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  wire [8-1:0] M_adddr_sum;
  wire [1-1:0] M_adddr_z;
  wire [1-1:0] M_adddr_v;
  wire [1-1:0] M_adddr_n;
  reg [8-1:0] M_adddr_a;
  reg [8-1:0] M_adddr_b;
  reg [1-1:0] M_adddr_alufn0;
  mojo_8bitfulladder_2 adddr (
    .a(M_adddr_a),
    .b(M_adddr_b),
    .alufn0(M_adddr_alufn0),
    .sum(M_adddr_sum),
    .z(M_adddr_z),
    .v(M_adddr_v),
    .n(M_adddr_n)
  );
  
  wire [8-1:0] M_cpr_out;
  reg [1-1:0] M_cpr_z;
  reg [1-1:0] M_cpr_v;
  reg [1-1:0] M_cpr_n;
  reg [2-1:0] M_cpr_alufn;
  compare8_3 cpr (
    .z(M_cpr_z),
    .v(M_cpr_v),
    .n(M_cpr_n),
    .alufn(M_cpr_alufn),
    .out(M_cpr_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    M_adddr_a = io_dip[0+7-:8];
    M_adddr_b = io_dip[8+7-:8];
    M_adddr_alufn0 = io_dip[16+0+0-:1];
    M_cpr_z = M_adddr_z;
    M_cpr_n = M_adddr_n;
    M_cpr_v = M_adddr_v;
    M_cpr_alufn = io_dip[16+1+1-:2];
    io_led[8+7-:8] = io_dip[8+7-:8];
    io_led[0+7-:8] = io_dip[0+7-:8];
    io_led[16+7-:8] = M_cpr_out;
  end
endmodule
